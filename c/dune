(data_only_dirs vendor)

(library
 (name OManifold_c)
 (public_name OManifold.c)
 (wrapped false)
 (libraries ctypes ctypes.foreign)
 (flags
  (:standard -w -9-16-27))
 (ctypes
  (build_flags_resolver
   (vendored
    ; HACK: multiple -I directives to work around cc commands being
    ; run from different relative directories.
    ; https://github.com/ocaml/dune/issues/5325
    (c_flags
     "-Ic/vendor/manifold/bindings/c/include"
     "-Ivendor/manifold/bindings/c/include")
    (c_library_flags %{read-lines:config/c_library_flags})))
  (headers
   (include "manifoldc.h"))
  (external_library_name libmanifoldc)
  (type_description
   (instance Types)
   (functor Manifold_c_type_descriptions))
  (function_description
   (concurrency sequential)
   (instance Funcs)
   (functor Manifold_c_function_descriptions))
  (generated_types Manifold_c_types)
  (generated_entry_point C))
 (foreign_stubs
  (language c)
  (names helpers)
  (include_dirs "vendor/manifold/bindings/c/include")
  (flags %{read-lines:config/c_library_flags}))
 (foreign_archives manifoldc manifold meshIO clipper2))

; Build Manifold vendor

(rule
 (targets
  dllmanifoldc%{ext_dll}
  dllmanifold%{ext_dll}
  dllmeshIO%{ext_dll}
  dllclipper2%{ext_dll})
 ; (deps
 ;  (source_tree vendor/manifold))
 ;  HACK: dune breaks when encountering the intentionally broken symlinks in the
 ;  test directories of thrust's libcxx dependency, so until that is fixed I'm dodging those
 ;  files with this mess
 (deps
  (file vendor/manifold/CMakeLists.txt)
  (source_tree vendor/manifold/bindings)
  (source_tree vendor/manifold/meshIO)
  (file vendor/manifold/src/CMakeLists.txt)
  (source_tree vendor/manifold/src/collider)
  (source_tree vendor/manifold/src/cross_section)
  (source_tree vendor/manifold/src/manifold)
  (source_tree vendor/manifold/src/polygon)
  (source_tree vendor/manifold/src/sdf)
  (source_tree vendor/manifold/src/utilities)
  (file vendor/manifold/src/third_party/CMakeLists.txt)
  (source_tree vendor/manifold/src/third_party/clipper2)
  (source_tree vendor/manifold/src/third_party/glm)
  (source_tree vendor/manifold/src/third_party/graphlite)
  (source_tree vendor/manifold/src/third_party/thrust/thrust)
  (source_tree vendor/manifold/src/third_party/thrust/cmake)
  (source_tree vendor/manifold/src/third_party/thrust/dependencies/cub)
  (source_tree
   vendor/manifold/src/third_party/thrust/dependencies/libcudacxx/cmake)
  (source_tree
   vendor/manifold/src/third_party/thrust/dependencies/libcudacxx/codegen)
  (source_tree
   vendor/manifold/src/third_party/thrust/dependencies/libcudacxx/include)
  (source_tree
   vendor/manifold/src/third_party/thrust/dependencies/libcudacxx/lib)
  (source_tree
   vendor/manifold/src/third_party/thrust/dependencies/libcudacxx/libcxx/cmake)
  (source_tree
   vendor/manifold/src/third_party/thrust/dependencies/libcudacxx/libcxx/include)
  (source_tree
   vendor/manifold/src/third_party/thrust/dependencies/libcudacxx/libcxx/lib)
  (source_tree
   vendor/manifold/src/third_party/thrust/dependencies/libcudacxx/libcxx/src)
  (source_tree
   vendor/manifold/src/third_party/thrust/dependencies/libcudacxx/libcxx/utils)
  (file
   vendor/manifold/src/third_party/thrust/dependencies/libcudacxx/libcxx/CMakeLists.txt)
  (source_tree
   vendor/manifold/src/third_party/thrust/dependencies/libcudacxx/libcxxabi)
  (source_tree
   vendor/manifold/src/third_party/thrust/dependencies/libcudacxx/libunwind)
  (source_tree
   vendor/manifold/src/third_party/thrust/dependencies/libcudacxx/utils)
  (file
   vendor/manifold/src/third_party/thrust/dependencies/libcudacxx/CMakeLists.txt))
 (action
  (no-infer
   (progn
    (with-outputs-to
     cmake_shared.log
     (chdir
      vendor/manifold/build_so
      (progn
       (run
        cmake
        -DCMAKE_BUILD_TYPE=Release
        -DBUILD_SHARED_LIBS=ON
        -DMANIFOLD_EXPORT=ON
        -DMANIFOLD_TEST=OFF
        -DMANIFOLD_PYBIND=OFF
        -DMANIFOLD_CBIND=ON
        -DMANIFOLD_USE_CUDA=%{read:config/use_cuda}
        ; -DMANIFOLD_PAR=OMP
        -DMANIFOLD_PAR=TBB
        ..)
       (run make -j))))
    (copy
     vendor/manifold/build_so/bindings/c/libmanifoldc%{ext_dll}
     dllmanifoldc%{ext_dll})
    (copy
     vendor/manifold/build_so/src/manifold/libmanifold%{ext_dll}
     dllmanifold%{ext_dll})
    (copy
     vendor/manifold/build_so/meshIO/libmeshIO%{ext_dll}
     dllmeshIO%{ext_dll})
    (copy
     vendor/manifold/build_so/src/third_party/clipper2/CPP/libClipper2%{ext_dll}
     dllclipper2%{ext_dll})))))

(rule
 (targets libmanifoldc.a libmanifold.a libmeshIO.a libclipper2.a)
 ; (deps
 ;  (source_tree vendor/manifold))
 ;  HACK: dune breaks when encountering the intentionally broken symlinks in the
 ;  test directories of thrust's libcxx dependency, so until that is fixed I'm dodging those
 ;  files with this mess
 (deps
  (file vendor/manifold/CMakeLists.txt)
  (source_tree vendor/manifold/bindings)
  (source_tree vendor/manifold/meshIO)
  (file vendor/manifold/src/CMakeLists.txt)
  (source_tree vendor/manifold/src/collider)
  (source_tree vendor/manifold/src/cross_section)
  (source_tree vendor/manifold/src/manifold)
  (source_tree vendor/manifold/src/polygon)
  (source_tree vendor/manifold/src/sdf)
  (source_tree vendor/manifold/src/utilities)
  (file vendor/manifold/src/third_party/CMakeLists.txt)
  (source_tree vendor/manifold/src/third_party/clipper2)
  (source_tree vendor/manifold/src/third_party/glm)
  (source_tree vendor/manifold/src/third_party/graphlite)
  (source_tree vendor/manifold/src/third_party/thrust/thrust)
  (source_tree vendor/manifold/src/third_party/thrust/cmake)
  (source_tree vendor/manifold/src/third_party/thrust/dependencies/cub)
  (source_tree
   vendor/manifold/src/third_party/thrust/dependencies/libcudacxx/cmake)
  (source_tree
   vendor/manifold/src/third_party/thrust/dependencies/libcudacxx/codegen)
  (source_tree
   vendor/manifold/src/third_party/thrust/dependencies/libcudacxx/include)
  (source_tree
   vendor/manifold/src/third_party/thrust/dependencies/libcudacxx/lib)
  (source_tree
   vendor/manifold/src/third_party/thrust/dependencies/libcudacxx/libcxx/cmake)
  (source_tree
   vendor/manifold/src/third_party/thrust/dependencies/libcudacxx/libcxx/include)
  (source_tree
   vendor/manifold/src/third_party/thrust/dependencies/libcudacxx/libcxx/lib)
  (source_tree
   vendor/manifold/src/third_party/thrust/dependencies/libcudacxx/libcxx/src)
  (source_tree
   vendor/manifold/src/third_party/thrust/dependencies/libcudacxx/libcxx/utils)
  (file
   vendor/manifold/src/third_party/thrust/dependencies/libcudacxx/libcxx/CMakeLists.txt)
  (source_tree
   vendor/manifold/src/third_party/thrust/dependencies/libcudacxx/libcxxabi)
  (source_tree
   vendor/manifold/src/third_party/thrust/dependencies/libcudacxx/libunwind)
  (source_tree
   vendor/manifold/src/third_party/thrust/dependencies/libcudacxx/utils)
  (file
   vendor/manifold/src/third_party/thrust/dependencies/libcudacxx/CMakeLists.txt))
 (action
  (no-infer
   (progn
    (with-outputs-to
     cmake_static.log
     (chdir
      vendor/manifold/build_a
      (progn
       (run
        cmake
        -DCMAKE_BUILD_TYPE=Release
        -DBUILD_SHARED_LIBS=OFF
        -DMANIFOLD_EXPORT=ON
        -DMANIFOLD_TEST=OFF
        -DMANIFOLD_PYBIND=OFF
        -DMANIFOLD_CBIND=ON
        -DMANIFOLD_USE_CUDA=%{read:config/use_cuda}
        ; -DMANIFOLD_PAR=OMP
        -DMANIFOLD_PAR=TBB
        ..)
       (run make -j))))
    (copy vendor/manifold/build_a/bindings/c/libmanifoldc.a libmanifoldc.a)
    (copy vendor/manifold/build_a/src/manifold/libmanifold.a libmanifold.a)
    (copy vendor/manifold/build_a/meshIO/libmeshIO.a libmeshIO.a)
    (copy
     vendor/manifold/build_a/src/third_party/clipper2/CPP/libClipper2.a
     libclipper2.a)))))
